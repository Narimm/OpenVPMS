<project default="jar"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core"
         xmlns:velocity="jelly:velocity"
         xmlns:artifact="artifact"
         xmlns:castor="castor">

    <!-- ==================================================================== -->
    <!-- Generates java sources using castor                                  -->
    <!-- ==================================================================== -->
    <goal name="generate-castor-srcs">
        <attainGoal name="castor:prepare-filesystem"/>
        <castor:generate schema="${basedir}/src/schema/mapping.xsd"
                         package="org.openvpms.etl.load"
                         types="j2"/>
    </goal>

    <!-- ==================================================================== -->
    <!-- Generates sources prior to compilation                               -->
    <!-- ==================================================================== -->
    <preGoal name="java:compile">
        <attainGoal name="generate-castor-srcs"/>
    </preGoal>

    <preGoal name="test:test">
        <attainGoal name="generate-hibernate-properties"/>
        <attainGoal name="generate-appcontext"/>
        <copy todir="${maven.test.dest}"
              file="${maven.build.dir}/applicationContext.xml"/>
    </preGoal>

    <preGoal name="hibernate:schema-export">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
    </preGoal>

    <preGoal name="hibernate:schema-update">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
    </preGoal>

    <goal name="generate-hibernate-properties">
        <!-- src/conf/hibernate can go when the maven1 build is dropped -->
        <copy tofile="${maven.hibernate.properties}"
              file="src/conf/hibernate/hibernate.properties">
           <filterset begintoken="${'${'}" endtoken="}">
                <filter token="hibernate.dialect" value="${hibernate.dialect}"/>
                <filter token="jdbc.driverClassName" value="${jdbc.driverClassName}"/>
                <filter token="jdbc.url" value="${jdbc.url}"/>
                <filter token="jdbc.username" value="${jdbc.username}"/>
                <filter token="jdbc.password" value="${jdbc.password}"/>
            </filterset>
        </copy>
    </goal>

</project>
