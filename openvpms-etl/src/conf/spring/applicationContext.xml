<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN//EN"
        "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="@JDBC_DRIVER@"/>
        <property name="url" value="@JDBC_URL@"/>
        <property name="username" value="@JDBC_USERNAME@"/>
        <property name="password" value="@JDBC_PASSWORD@"/>
    </bean>

    <!-- Configure CacheManager from specified config location -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>

    <!--  Entity Interceptor Bean for Hibernate -->
    <bean id="entityInterceptor"
          class="org.openvpms.component.system.service.hibernate.EntityInterceptor">
    </bean>

    <!--  Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
        <property name="entityInterceptor">
            <ref local="entityInterceptor"/>
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">1800</prop>
                <prop key="hibernate.c3p0.max_statements">50</prop>
                <prop key="hibernate.cache.provider_class">
                    org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.query.factory_class">
                    org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>
                    /org/openvpms/component/business/domain/im/lookup/Lookup.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/lookup/LookupRelationship.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/act/Act.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/act/ActRelationship.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/document/Document.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/common/Entity.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/common/EntityIdentity.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/common/EntityRelationship.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/common/Participation.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/party/Contact.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/product/ProductPrice.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/archetype/descriptor/ArchetypeDescriptor.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/archetype/descriptor/AssertionDescriptor.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/archetype/descriptor/AssertionTypeDescriptor.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/archetype/descriptor/NodeDescriptor.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/archetype/descriptor/ActionTypeDescriptor.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/security/SecurityRole.hbm.xml
                </value>
                <value>
                    /org/openvpms/component/business/domain/im/security/ArchetypeAwareGrantedAuthority.hbm.xml
                </value>
                <value>
                    /org/openvpms/etl/load/ETLLog.hbm.xml
                </value>
            </list>
        </property>
    </bean>

    <!--  The IMObject DAO bean -->
    <bean id="imObjectDao"
          class="org.openvpms.component.business.dao.hibernate.im.entity.IMObjectDAOHibernate">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <bean id="archetypeDescriptorCache"
          class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheDB">
        <constructor-arg index="0" ref="imObjectDao"/>
    </bean>

    <!--  The Archetype Service -->
    <bean id="archetypeService"
          class="org.openvpms.component.business.service.archetype.ArchetypeService">
        <constructor-arg index="0">
            <ref local="archetypeDescriptorCache"/>
        </constructor-arg>
        <property name="dao">
            <ref local="imObjectDao"/>
        </property>
        <property name="entityInterceptor">
            <ref local="entityInterceptor"/>
        </property>
    </bean>

    <bean id="archetypeServiceHelper"
          class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
    </bean>

    <bean id="lookupServiceHelper"
          class="org.openvpms.component.business.service.lookup.LookupServiceHelper">
        <constructor-arg index="0">
            <ref local="lookupService"/>
        </constructor-arg>
    </bean>

    <bean id="lookupService" class="org.openvpms.etl.load.CachingLookupService">
        <constructor-arg>
            <ref local="archetypeService"/>
        </constructor-arg>
    </bean>

    <!-- The JXPathHelper class, used to register extension functions -->
    <bean id="jxpathHelper"
          class="org.openvpms.component.system.common.jxpath.JXPathHelper">
        <constructor-arg>
            <map>
                <entry key="openvpms" value="org.openvpms.component.business.service.archetype.ArchetypeServiceFunctions"/>
                <entry key="date" value="org.openvpms.component.system.common.jxpath.DateFunctions"/>
                <entry key="lookup" value="org.openvpms.archetype.function.lookup.LookupFunctions"/>
                <entry key="party">
                    <bean class="org.openvpms.etl.load.LoaderPartyFunctions"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <!-- ================================================================== -->
    <!--                         ETL DEFINITIONS                            -->
    <!-- ================================================================== -->
    <bean id="ETLLogDAO" class="org.openvpms.etl.load.ETLLogDAOImpl">
        <constructor-arg>
            <ref local="sessionFactory"/>
        </constructor-arg>
    </bean>

</beans>
