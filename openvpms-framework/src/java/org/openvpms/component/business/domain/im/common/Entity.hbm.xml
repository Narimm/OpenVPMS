<?xml version="1.0"?>
<!--
  #  Version: 1.0
  #
  #  The contents of this file are subject to the OpenVPMS License Version
  #  1.0 (the 'License'); you may not use this file except in compliance with
  #  the License. You may obtain a copy of the License at
  #  http://www.openvpms.org/license/
  #
  #  Software distributed under the License is distributed on an 'AS IS' basis,
  #  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  #  for the specific language governing rights and limitations under the
  #  License.
  #
  #  Copyright 2005 (C) OpenVPMS Ltd. All Rights Reserved.
  #
  #  $Id$
-->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
  <class name="org.openvpms.component.business.domain.im.common.Entity"
    table="entities">
    <cache usage="read-write" />
    <id name="uid" type="long" unsaved-value="-1">
      <column name="entity_id" index="entity_id_idx" />
      <generator class="native" />
    </id>
    <version name="version" access="property" type="long" />
    <property name="linkId" access="property" type="string" length="100"
      index="entity_linkId_idx" />
    <component name="archetypeId">
      <property name="namespace" access="property" column="arch_namespace"
        type="string" length="100" />
      <property name="rmName" access="property" column="arch_rm_name"
        type="string" length="100" />
      <property name="concept" access="property" column="arch_concept_name"
        type="string" length="100" index="entity_concept_idx,entity_concept_name_idx,entity_concept_code_idx" />
      <property name="entityName" access="property" column="arch_entity_name"
        type="string" length="100" />
      <property name="version" access="property" column="arch_version"
        type="string" length="100" />
    </component>
    <property name="name" access="property" column="name" type="string"
      length="100" index="entity_name_idx,entity_concept_name_idx" />
    <property name="description" access="property" column="description"
      type="string" />
    <property name="active" access="property" column="active" type="boolean" />
    <property name="code" access="property" column="code" type="string"
      length="100" index="entity_code_idx,entity_concept_code_idx" />
    <property name="details" column="details" access="property" length="5000"
      type="org.openvpms.component.business.dao.hibernate.usertype.DynamicAttributeMapUserType" />
    <set name="classifications" access="property" inverse="false"
      table="entity_classifications" cascade="evict">
      <key column="entity_id" not-null="true" />
      <many-to-many
        class="org.openvpms.component.business.domain.im.common.Classification"
        column="classification_id" outer-join="auto" />
    </set>
    <set name="identities" access="property" inverse="true"
         cascade="all,delete-orphan">
      <key column="entity_id" not-null="true" />
      <one-to-many
        class="org.openvpms.component.business.domain.im.common.EntityIdentity" />
    </set>
    <set name="sourceEntityRelationships" access="property"
         cascade="all,delete-orphan" inverse="true">
      <key column="source_linkId" property-ref="linkId" not-null="true" />
      <one-to-many
        class="org.openvpms.component.business.domain.im.common.EntityRelationship" />
    </set>
    <set name="targetEntityRelationships" access="property"
         cascade="all,delete-orphan" inverse="true">
      <key column="target_linkId" property-ref="linkId" not-null="true" />
      <one-to-many
        class="org.openvpms.component.business.domain.im.common.EntityRelationship" />
    </set>

    <!-- Mapping for the User class -->
    <joined-subclass
      name="org.openvpms.component.business.domain.im.security.User"
      table="users">
      <key column="user_id" />
      <property name="username" access="property" column="user_name"
           type="string" length="20" index="user_name_idx" not-null="true"/>
      <property name="password" access="property" column="password"
           type="string" length="20"/>
      <set name="roles" access="property" table="user_roles"
           cascade="save-update" inverse="false">
        <key column="user_id" />
        <many-to-many
          class="org.openvpms.component.business.domain.im.security.SecurityRole"
          column="security_role_id" outer-join="auto" />
      </set>
    </joined-subclass>

    <!--  Mapping for the Party class -->
    <joined-subclass
      name="org.openvpms.component.business.domain.im.party.Party"
      table="parties">
      <key column="party_id" />
      <set name="contacts" access="property" inverse="true"
           cascade="all,delete-orphan">
        <key column="party_id" />
        <one-to-many
          class="org.openvpms.component.business.domain.im.party.Contact" />
      </set>
    </joined-subclass>

    <!--  Mapping for the Product class -->
    <joined-subclass
      name="org.openvpms.component.business.domain.im.product.Product"
      table="products">
      <key column="product_id" />
      <set name="productPrices" access="property" cascade="all,delete-orphan">
        <key column="product_id" />
        <one-to-many
          class="org.openvpms.component.business.domain.im.product.ProductPrice" />
      </set>
    </joined-subclass>
  </class>

  <query name="user.getRowCount">
    <![CDATA[
      select count(user) from org.openvpms.component.business.domain.im.security.User as 
      user
    ]]>
  </query>

  <query name="user.getByName">
    <![CDATA[
      from org.openvpms.component.business.domain.im.security.User as 
      user where user.name = :name
    ]]>
  </query>

  <query name="product.getRowCount">
    <![CDATA[
			select count(product) from org.openvpms.component.business.domain.im.product.Product as 
			product
		]]>
  </query>

  <query name="party.getRowCount">
    <![CDATA[
      select count(party) from org.openvpms.component.business.domain.im.party.Party as 
      party
    ]]>
  </query>

  <query name="entity.getEntityById">
    <![CDATA[
			from org.openvpms.component.business.domain.im.common.Entity as
			entity where entity.uid = :uid
		]]>
  </query>

</hibernate-mapping>