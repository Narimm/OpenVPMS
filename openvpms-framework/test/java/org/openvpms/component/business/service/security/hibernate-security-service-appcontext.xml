<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2014 (C) OpenVPMS Ltd. All Rights Reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <import resource="classpath:/datasource-context.xml"/>

    <!--  The IMObject DAO bean -->
    <bean id="imObjectDao"
          class="org.openvpms.component.business.dao.hibernate.im.IMObjectDAOHibernate">
        <constructor-arg ref="sessionFactory"/>
        <property name="transactionManager" ref="txnManager"/>
        <property name="archetypeDescriptorCache">
            <ref local="archetypeDescriptorCache"/>
        </property>
    </bean>

    <!--  The User DAO bean -->
    <bean id="userDAO"
          class="org.openvpms.component.business.dao.hibernate.im.security.UserDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  The AuditRecord DAO bean -->
    <bean id="auditDao"
          class="org.openvpms.component.business.dao.hibernate.im.audit.AuditDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  The Archetype Descriptor Cache -->
    <bean id="archetypeDescriptorCache"
          class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheFS">
        <constructor-arg index="0" value="org/openvpms/archetype"/>
        <constructor-arg index="1">
            <list>
                <value>adl</value>
            </list>
        </constructor-arg>
        <constructor-arg index="2"
                         value="org/openvpms/archetype/assertionTypes.xml"/>
    </bean>

    <!--  The Archetype Service -->
    <bean id="archetypeService"
          class="org.openvpms.component.business.service.archetype.ArchetypeService">
        <constructor-arg index="0">
            <ref local="archetypeDescriptorCache"/>
        </constructor-arg>
        <property name="dao">
            <ref local="imObjectDao"/>
        </property>
    </bean>

    <!--  Instantiate the archetype service helper bean and inject their dependencies -->
    <bean id="archetypeServiceHelper"
          class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
    </bean>

    <!--  The Lookup Service -->
    <bean id="lookupService" class="org.openvpms.component.business.service.lookup.LookupService">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref local="imObjectDao"/>
        </constructor-arg>
    </bean>

    <!--  Instantiate the lookup service helper bean and inject their dependencies -->
    <bean id="lookupServiceHelper" class="org.openvpms.component.business.service.lookup.LookupServiceHelper">
        <constructor-arg>
            <ref local="lookupService"/>
        </constructor-arg>
    </bean>

    <!-- The JXPathHelper class, used to register extension functions -->
    <bean id="jxpathHelper"
          class="org.openvpms.component.system.common.jxpath.JXPathHelper">
        <constructor-arg>
            <map>
                <entry key="openvpms"
                       value="org.openvpms.component.business.service.archetype.ArchetypeServiceFunctions"/>
                <entry key="date"
                       value="org.openvpms.component.system.common.jxpath.DateFunctions"/>
            </map>
        </constructor-arg>
    </bean>

    <!--  The Audit Service -->
    <bean id="auditService"
          class="org.openvpms.component.business.service.audit.AuditService">
        <constructor-arg index="0">
            <ref local="auditDao"/>
        </constructor-arg>
    </bean>

    <!--  The User Details Service -->
    <bean id="userDetailsService"
          class="org.openvpms.component.business.service.security.UserService">
        <constructor-arg index="0">
            <ref local="userDAO"/>
        </constructor-arg>
    </bean>


    <!--  Create a proxy for the Sudit Service bean -->
    <bean id="auditServiceProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>archetypeService</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>auditServiceAdvisor</value>
            </list>
        </property>
    </bean>

    <!-- The audit service advisor -->
    <bean id="auditServiceAdvisor"
          class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice">
            <ref local="auditService"/>
        </property>
        <property name="patterns">
            <list>
                <value>.*ArchetypeService\.save</value>
                <value>.*ArchetypeService\.remove</value>
            </list>
        </property>
    </bean>

    <!--  Create a proxy for the Security Service bean -->
    <bean id="securityserviceProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>archetypeService</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
            </list>
        </property>
    </bean>

    <!--  Configure the security advisor -->
    <bean id='securityAdvisor'
          class='org.openvpms.component.business.service.security.OpenVPMSMethodSecurityInterceptor'>
        <property name='authenticationManager' ref='authenticationManager'/>
        <property name='accessDecisionManager' ref='accessDecisionManager'/>
        <property name='securityMetadataSource'>
            <value>
                org.openvpms.component.business.service.archetype.IArchetypeService.create=archetypeService.create
                org.openvpms.component.business.service.archetype.IArchetypeService.save=archetypeService.save
                org.openvpms.component.business.service.archetype.IArchetypeService.remove=archetypeService.remove
            </value>
        </property>
    </bean>

    <!--  Define the Authentication Manager  -->
    <bean id='authenticationManager'
          class='org.springframework.security.authentication.ProviderManager'>
        <property name='providers'>
            <list>
                <ref bean='daoAuthenticationProvider'/>
            </list>
        </property>
    </bean>

    <!--  Define the authentication provider -->
    <bean id='daoAuthenticationProvider'
          class='org.springframework.security.authentication.dao.DaoAuthenticationProvider'>
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <!--  Define thew access decision manager for authorization -->
    <bean id='accessDecisionManager'
          class='org.springframework.security.access.vote.AffirmativeBased'>
        <property name='decisionVoters'>
            <list>
                <ref bean='archetypeAwareVoter'/>
            </list>
        </property>
    </bean>

    <!--  Use the standard role vote -->
    <bean id='archetypeAwareVoter'
          class='org.openvpms.component.business.service.security.ArchetypeAwareVoter'/>
</beans>
