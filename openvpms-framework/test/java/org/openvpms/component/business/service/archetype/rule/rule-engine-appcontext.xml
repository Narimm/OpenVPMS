<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN//EN"
  "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
  <!--  Property configuration -->
  <bean id="props"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:hibernate.properties</value>
      </list>
    </property>
  </bean>

  <!--  The MySQL DataSource -->
  <bean id="mySQLDataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName"
      value="${hibernate.connection.driver_class}" />
    <property name="url" value="${hibernate.connection.url}" />
    <property name="username" value="${hibernate.connection.username}" />
    <property name="password" value="${hibernate.connection.password}" />
  </bean>


  <!--  Hibernate session factory -->
  <bean id="sessionFactory"
    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource">
      <ref local="mySQLDataSource" />
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop>
        <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
        <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>
        <prop key="hibernate.c3p0.max_statements">
          ${hibernate.c3p0.max_statements}
        </prop>
      </props>
    </property>
    <property name="mappingResources">
      <list>
        <value>
          /org/openvpms/component/business/domain/im/lookup/Lookup.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/lookup/LookupRelationship.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/act/Act.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/document/Document.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/act/ActRelationship.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/common/Entity.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/common/EntityIdentity.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/common/EntityRelationship.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/common/Participation.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/party/Contact.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/product/ProductPrice.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/archetype/descriptor/ArchetypeDescriptor.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/archetype/descriptor/AssertionDescriptor.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/archetype/descriptor/AssertionTypeDescriptor.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/archetype/descriptor/NodeDescriptor.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/archetype/descriptor/ActionTypeDescriptor.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/security/SecurityRole.hbm.xml
        </value>
        <value>
          /org/openvpms/component/business/domain/im/security/ArchetypeAwareGrantedAuthority.hbm.xml
        </value>
      </list>
    </property>
  </bean>

  <bean id="txnManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!--  The IMObject DAO bean -->
  <bean id="imObjectDao"
        class="org.openvpms.component.business.dao.hibernate.im.entity.IMObjectDAOHibernate">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="transactionManager" ref="txnManager"/>
    <property name="archetypeDescriptorCache" ref="archetypeDescriptorCache"/>
  </bean>

  <!--  The Archetype Descriptor Cache -->
  <bean id="archetypeDescriptorCache"
    class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheFS">
    <constructor-arg index="0" value="org/openvpms/archetype" />
    <constructor-arg index="1">
      <list>
        <value>adl</value>
      </list>
    </constructor-arg>
    <constructor-arg index="2"
      value="org/openvpms/archetype/assertionTypes.xml" />
  </bean>


    <!--  The Archetype Service -->
    <bean id="defaultArchetypeService"
      class="org.openvpms.component.business.service.archetype.ArchetypeService">
      <constructor-arg ref="archetypeDescriptorCache" />
      <property name="dao" ref="imObjectDao" />
      <property name="ruleEngine" ref="ruleEngine" />
    </bean>

  <!--  The rule-based Archetype Service -->
  <bean id="archetypeService"
    class="org.openvpms.component.business.service.archetype.rule.ArchetypeRuleService">
    <constructor-arg ref="defaultArchetypeService" />
    <constructor-arg ref="txnManager" />
    <constructor-arg ref="ruleEngine" />
  </bean>
  
  <!--  Instantiate the archetype service helper bean and inject their dependencies -->
  <bean id="archetypeServiceHelper"
    class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
    <constructor-arg ref="archetypeService"/>
  </bean>

  <!-- The `local' ruleServiceProvider; we can have as many different ruleProviders as we want -->
  <bean id="ruleServiceProvider"
    class="org.springmodules.jsr94.factory.DefaultRuleServiceProviderFactoryBean">
    <property name="provider" value="http://drools.org"/>
    <property name="providerClass" value="org.drools.jsr94.rules.RuleServiceProviderImpl"/>
  </bean>

  <!-- The local ruleRuntime. Usually, there is one ruleRuntime bean for each ruleServiceProvider bean. -->
  <bean id="ruleRuntime"
    class="org.springmodules.jsr94.factory.RuleRuntimeFactoryBean">
    <property name="serviceProvider" ref="ruleServiceProvider"/>
  </bean>

  <!-- the local ruleAdministrator. Usually, there is one ruleAdministrator bean for each ruleServiceProvider bean -->
  <bean id="ruleAdministrator"
    class="org.springmodules.jsr94.factory.RuleAdministratorFactoryBean">
    <property name="serviceProvider" ref="ruleServiceProvider" />
  </bean>

  <!-- the ruleSource. There can be many ruleSource beans for each ruleAdministrator/ruleRuntime. -->
  <bean id="ruleSource"
    class="org.openvpms.component.business.service.ruleengine.RuleDescriptorRuleSource">
    <property name="ruleRuntime" ref="ruleRuntime"/>
    <property name="ruleAdministrator" ref="ruleAdministrator"/>
  </bean>

  <!--  The Rule Engine -->
  <bean id="ruleEngine"
    class="org.openvpms.component.business.service.ruleengine.RuleEngine">
    <constructor-arg ref="ruleSource"/>
  </bean>

</beans>
