<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN//EN"
        "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <!--  Property configuration -->
    <bean id="props"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hibernate.properties</value>
            </list>
        </property>
    </bean>

    <!--  The MySQL DataSource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName"
                  value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <!-- Configure CacheManager from specified config location -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:org/openvpms/tools/data/loader/ehcache.xml</value>
        </property>
    </bean>

    <bean id="linkIdCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="cacheManager"/>
        </property>
        <property name="diskPersistent">
            <value>true</value>
        </property>
        <property name="cacheName">
            <value>linkIdCache</value>
        </property>
        <property name="maxElementsInMemory">
            <value>40000</value>
        </property>
        <property name="overflowToDisk">
            <value>true</value>
        </property>
        <property name="eternal">
            <value>true</value>
        </property>
    </bean>

    <bean id="idCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="cacheManager"/>
        </property>
        <property name="cacheName">
            <value>idCache</value>
        </property>
        <property name="diskPersistent">
            <value>true</value>
        </property>
        <property name="maxElementsInMemory">
            <value>40000</value>
        </property>
        <property name="overflowToDisk">
            <value>true</value>
        </property>
        <property name="eternal">
            <value>true</value>
        </property>
    </bean>

    <bean id="unprocessedElementCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="cacheManager"/>
        </property>
        <property name="cacheName">
            <value>unprocessedElementCache</value>
        </property>
        <property name="diskPersistent">
            <value>true</value>
        </property>
        <property name="maxElementsInMemory">
            <value>40000</value>
        </property>
        <property name="overflowToDisk">
            <value>true</value>
        </property>
        <property name="eternal">
            <value>true</value>
        </property>
    </bean>

    <!--  Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.c3p0.min_size">
                    ${hibernate.c3p0.min_size}</prop>
                <prop key="hibernate.c3p0.max_size">
                    ${hibernate.c3p0.max_size}</prop>
                <prop key="hibernate.c3p0.timeout">
                    ${hibernate.c3p0.timeout}</prop>
                <prop key="hibernate.cache.provider_class">
                    ${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.cache.use_second_level_cache">
                    ${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.jdbc.batch_size">
                    ${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.c3p0.max_statements">
                    ${hibernate.c3p0.max_statements}
                </prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ActDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ActRelationshipDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ParticipationDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/ActionTypeDescriptorDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/ArchetypeDescriptorDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/AssertionDescriptorDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/AssertionTypeDescriptorDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/NodeDescriptorDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/document/DocumentDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/audit/AuditRecord.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityIdentityDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityRelationshipDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/lookup/LookupDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/lookup/LookupRelationshipDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/party/ContactDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/product/ProductPriceDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/security/ArchetypeAuthorityDO.hbm.xml</value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/security/SecurityRoleDO.hbm.xml</value>
            </list>
        </property>
    </bean>

    <bean id="txnManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  The IMObject DAO bean -->
    <bean id="imObjectDao"
          class="org.openvpms.component.business.dao.hibernate.im.entity.IMObjectDAOHibernate">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
        <property name="transactionManager">
            <ref local="txnManager"/>
        </property>
    </bean>

    <!--  The AuditRecord DAO bean -->
    <bean id="auditDao"
          class="org.openvpms.component.business.dao.hibernate.im.audit.AuditDAOHibernate">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <!--  The Archetype Descriptor Cache -->
    <bean id="archetypeDescriptorCache"
          class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheDB">
        <constructor-arg index="0" ref="imObjectDao"/>
    </bean>

    <!--  The Archetype Service -->
    <bean id="archetypeService"
          class="org.openvpms.component.business.service.archetype.ArchetypeService">
        <constructor-arg index="0">
            <ref local="archetypeDescriptorCache"/>
        </constructor-arg>
        <property name="dao">
            <ref local="imObjectDao"/>
        </property>
    </bean>

    <!--  Instantiate the archetype service helper bean and inject their dependencies -->
    <bean id="archetypeServiceHelper"
          class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
    </bean>

    <!--  The JXPathHelper class, which allows the user to register JXPath extension functions -->
    <bean id="jxpathHelper"
          class="org.openvpms.component.system.common.jxpath.JXPathHelper">
        <constructor-arg index="0">
            <props>
            </props>
        </constructor-arg>
    </bean>

</beans>
