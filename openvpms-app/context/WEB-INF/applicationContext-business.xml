<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <!-- ========================================================================== -->
	<!-- ========================= GENERAL DEFINITIONS ============================ -->
    <!-- ========================================================================== -->

	  <!--  Property configuration -->
	  <bean id="props"
	    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	      <list>
	        <value>classpath:hibernate.properties</value>
	      </list>
	    </property>
	  </bean>

    <!-- ========================================================================== -->
	<!-- ========================= RESOURCE DEFINITIONS =========================== -->
    <!-- ========================================================================== -->
	
	  <!--  The MySQL DataSource -->
	  <bean id="mySQLDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    <property name="driverClassName"
	      value="${hibernate.connection.driver_class}" />
	    <property name="url" value="${hibernate.connection.url}" />
	    <property name="username" value="${hibernate.connection.username}" />
	    <property name="password" value="${hibernate.connection.password}" />
	  </bean>
	
	  <!--  Hibernate session factory -->
	  <bean id="sessionFactory"
	    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	    <property name="dataSource">
	      <ref local="mySQLDataSource" />
	    </property>
	    <property name="hibernateProperties">
	      <props>
	        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	        <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop>
	        <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
	        <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>
	        <prop key="hibernate.c3p0.max_statements">
	          ${hibernate.c3p0.max_statements}
	        </prop>
	      </props>
	    </property>
	    <property name="mappingResources">
	      <list>
	        <value>/org/openvpms/component/business/domain/im/lookup/Lookup.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/Act.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/ActRelationship.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/Classification.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/Entity.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/EntityClassification.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/EntityIdentity.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/EntityRelationship.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/common/Participation.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/party/Address.hbm.xml</value>
	        <value>/org/openvpms/component/business/domain/im/party/Contact.hbm.xml</value>
	      </list>
	    </property>
	  </bean>
	
    <!-- ========================================================================== -->
	<!-- =============== DAO DEFINITIONS ========================================== -->
    <!-- ========================================================================== -->
	  <!--  The Entity DAO bean -->
	  <bean id="entityDao"
	    class="org.openvpms.component.business.dao.hibernate.im.entity.EntityDAOHibernate">
	    <property name="sessionFactory">
	      <ref local="sessionFactory" />
	    </property>
	  </bean>
	  <!--  The Lookup DAO bean -->
	  <bean id="lookupDao"
	    class="org.openvpms.component.business.dao.hibernate.im.lookup.LookupDAOHibernate">
	    <property name="sessionFactory">
	      <ref local="sessionFactory" />
	    </property>
	  </bean>
	  <!--  The Party DAO bean -->
	  <bean id="partyDao"
	    class="org.openvpms.component.business.dao.hibernate.im.party.PartyDAOHibernate">
	    <property name="sessionFactory">
	      <ref local="sessionFactory" />
	    </property>
	  </bean>

    <!-- ========================================================================== -->
	<!-- =============== BUSINESS SERVICE BEANS =================================== -->
    <!-- ========================================================================== -->
	  <!--  The Archetype Service -->
	  <bean id="archetypeService"
	    class="org.openvpms.component.business.service.archetype.ArchetypeService">
	    <constructor-arg index="0" value="/org/openvpms/archetype" />
	    <constructor-arg index="1">
	      <list>
	        <value>adl</value>
	      </list>
	    </constructor-arg>
	    <constructor-arg index="2"
	      value="org/openvpms/archetype/assertionTypes.xml" />
	  </bean>
	  <!--  The Entity Service -->
	  <bean id="entityService"
	    class="org.openvpms.component.business.service.entity.EntityService">
	    <constructor-arg index="0">
	      <ref bean="archetypeService" />
	    </constructor-arg>
	    <constructor-arg index="1">
	      <ref bean="entityDao" />
	    </constructor-arg>
	  </bean>
	  <!--  The Lookup Service -->
	  <bean id="lookupService"
	    class="org.openvpms.component.business.service.lookup.LookupService">
	    <constructor-arg index="0">
	      <ref bean="archetypeService" />
	    </constructor-arg>
	    <constructor-arg index="1">
	      <ref bean="lookupDao" />
	    </constructor-arg>
	  </bean>
	  <!--  The Party Service -->
	  <bean id="partyService"
	    class="org.openvpms.component.business.service.party.PartyService">
	    <constructor-arg index="0">
	      <ref bean="archetypeService" />
	    </constructor-arg>
	    <constructor-arg index="1">
	      <ref bean="partyDao" />
	    </constructor-arg>
	  </bean>

    <!-- ========================================================================== -->
	<!-- =============== SECURITY DEFINITIONS (ACEGI SECURITY)===================== -->
    <!-- ========================================================================== -->
        
    <!--  see applicationContext-security.xml -->

</beans>
