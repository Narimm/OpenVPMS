<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2014 (C) OpenVPMS Ltd. All Rights Reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.openvpms</groupId>
        <artifactId>openvpms</artifactId>
        <version>1.8-beta-1</version>
        <relativePath>../openvpms/pom.xml</relativePath>
    </parent>

    <artifactId>openvpms-release</artifactId>

    <packaging>pom</packaging>
    <!-- hack to get round the fact that zip is not a supported package type -->

    <name>OpenVPMS Release</name>
    <description>The OpenVPMS Release Distribution
    </description>

    <scm>
        <connection>scm:svn:svn://svn.openvpms.org/openvpms/release/trunk</connection>
        <developerConnection>scm:svn:svn://svn.openvpms.org/openvpms/release/trunk</developerConnection>
    </scm>

    <distributionManagement>
        <site>
            <id>openvpms-site</id>
            <name>OpenVPMS Maven Site</name>
            <url>scp://dev.openvpms.org:2233/home/admin/public_html/dev.openvpms.org/public/${pom.artifactId}</url>
        </site>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-framework</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-archetypes</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-reports</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-sms</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-web-app</artifactId>
            <version>${pom.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-etl-load</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openvpms</groupId>
            <artifactId>openvpms-etl-plugin</artifactId>
            <version>${pom.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- use the dependency plugin to get the .adl files from archetypes and sms-->
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>org.openvpms</groupId>
                            <artifactId>openvpms-archetypes</artifactId>
                            <version>${pom.version}</version>
                            <outputDirectory>target/archetypes</outputDirectory>
                            <includes>org/**/*.adl,org/**/*.xml</includes>
                        </artifactItem>
                        <artifactItem>
                            <groupId>org.openvpms</groupId>
                            <artifactId>openvpms-sms</artifactId>
                            <version>${pom.version}</version>
                            <outputDirectory>target/archetypes</outputDirectory>
                            <includes>org/**/*.adl</includes>
                        </artifactItem>
                    </artifactItems>
                </configuration>
            </plugin>
            <plugin>
                <!-- use the resources plugin to generate hibernate.properties -->
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- drop and create the openvpms database -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.1</version>

                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>

                <!-- common configuration shared by all executions -->
                <configuration>
                    <driver>${build.jdbc.driverClassName}</driver>
                    <url>${build.jdbc.server}</url>
                    <username>${jdbc.admin.username}</username>
                    <password>${jdbc.admin.password}</password>
                </configuration>

                <executions>
                    <execution>
                        <id>drop-db</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <sqlCommand>drop database `${build.jdbc.db}`</sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>

                    <execution>
                        <id>create-db</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <sqlCommand>create database `${build.jdbc.db}`</sqlCommand>
                            <keepFormat>true</keepFormat>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- generate the database schema -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <componentProperties>
                        <jdk5>true</jdk5>
                        <configurationfile>target/classes/hibernate.cfg.xml</configurationfile>
                    </componentProperties>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!-- load archetypes -->
                <groupId>org.openvpms</groupId>
                <artifactId>openvpms-archetype-maven-plugin</artifactId>
                <version>${pom.version}</version>
                <configuration>
                    <dir>target/archetypes/org/openvpms</dir>
                    <assertionTypes>target/archetypes/org/openvpms/archetype/assertionTypes.xml</assertionTypes>
                    <dialect>${build.hibernate.dialect}</dialect>
                    <driver>${build.jdbc.driverClassName}</driver>
                    <url>${build.jdbc.url}</url>
                    <username>${build.jdbc.username}</username>
                    <password>${build.jdbc.password}</password>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>load</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <tasks>
                        <echo message="Dumping database"/>
                        <!-- todo - need alternative dump for other databases -->
                        <mkdir dir="target/db"/>
                        <exec executable="mysqldump" output="target/db/db.sql" failOnError="true" logError="true">
                            <arg line="${build.jdbc.db} -u ${jdbc.admin.username} --password=${jdbc.admin.password}"/>
                        </exec>
                    </tasks>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- build the release zip -->
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assemblies/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- helper to load report templates for testing -->
                <groupId>org.openvpms</groupId>
                <artifactId>openvpms-report-maven-plugin</artifactId>
                <version>${project.version}</version>
                <configuration>
                    <file>src/reports/templates-A4.xml</file>
                    <dialect>${build.hibernate.dialect}</dialect>
                    <driver>${build.jdbc.driverClassName}</driver>
                    <url>${build.jdbc.url}</url>
                    <username>${build.jdbc.username}</username>
                    <password>${build.jdbc.password}</password>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>${basedir}/src/conf/hibernate</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <properties>
        <jdbc.admin.username>root</jdbc.admin.username>
        <jdbc.admin.password>root</jdbc.admin.password>
    </properties>

</project>
