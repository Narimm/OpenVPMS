<project default="jar:jar"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core">

    <preGoal name="test:test">
       <attainGoal name="generate-hibernate-properties"/>
       <copy todir="${maven.test.dest}" file="${maven.hibernate.properties}"/>
    </preGoal>

    <preGoal name="hibernate:schema-export">
        <attainGoal name="generate-hibernate-properties"/>
        <attainGoal name="extract-mapping-files"/>
    </preGoal>

    <preGoal name="hibernate:schema-update">
        <attainGoal name="generate-hibernate-properties"/>
        <attainGoal name="extract-mapping-files"/>
    </preGoal>

    <goal name="generate-hibernate-properties">
        <copy tofile="${maven.hibernate.properties}"
              file="src/conf/hibernate/hibernate.properties">
            <filterset>
                <filter token="HIBERNATE_DIALECT" value="${hibernate.dialect}"/>
                <filter token="JDBC_DRIVER"
                        value="${hibernate.connection.driver_class}"/>
                <filter token="JDBC_URL" value="${hibernate.connection.url}"/>
                <filter token="JDBC_USERNAME"
                        value="${hibernate.connection.username}"/>
                <filter token="JDBC_PASSWORD"
                        value="${hibernate.connection.password}"/>
            </filterset>
        </copy>
    </goal>

    <goal name="extract-mapping-files">
        <attainGoal name="clean-mapping-files"/>

        <j:set var="repo" value="${context.getVariable('maven.repo.local')}"/>
        <j:set var="dependencyId" value="org.openvpms:openvpms-framework"/>
        <j:set var="artifactPath"
               value="${pom.getDependencyPath(dependencyId)}"/>
        <j:set var="artifactRepoPath" value="${repo}/${artifactPath}"/>

        <unzip src="${artifactPath}" dest="${maven.hibernate.input.dir}">
            <patternset>
                <include name="**/*.hbm.xml"/>
            </patternset>
        </unzip>
    </goal>

    <goal name="clean-mapping-files">
        <delete>
            <fileset dir="${maven.build.dir}/hibernate" includes="**/*.hbm.xml"/>
        </delete>
    </goal>

    <goal name="archetype:load" description="Load the Archetypes from a directory">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
        <ant:java
                classname="org.openvpms.tools.archetype.loader.ArchetypeLoader"
                failonerror="true"
                fork="true">
            <ant:classpath>
                <ant:pathelement path="${maven.build.dir}/hibernate"/>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
            <arg line="${openvpms.archetype.loader.cmdline}"/>
        </ant:java>
    </goal>

    <goal name="data:load" description="Load the Archetyped Data">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
        <ant:java
                classname="org.openvpms.tools.data.loader.StaxArchetypeDataLoader"
                failonerror="true"
                maxmemory="512m"
                fork="true">
            <ant:classpath>
                <ant:pathelement path="${maven.build.dest}"/>
                <ant:pathelement path="${maven.build.dir}/hibernate"/>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
            <arg line="${openvpms.data.loader.cmdline}"/>
        </ant:java>
    </goal>

    <goal name="generate-balance" description="Generate account balances">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
        <ant:java
                classname="org.openvpms.archetype.rules.balance.CustomerBalanceGenerator"
                failonerror="true"
                maxmemory="512m"
                fork="true">
            <ant:classpath>
                <ant:pathelement path="${maven.build.dest}"/>
                <ant:pathelement path="${maven.build.dir}/hibernate"/>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
            <arg line="-c application-context.xml"/>
        </ant:java>
    </goal>
    <goal name="migrate:details" description="Migrate the details column">
        <attainGoal name="java:compile"/>
        <attainGoal name="java:jar-resources"/>
        <attainGoal name="generate-hibernate-properties"/>
        <ant:java
            classname="org.openvpms.tools.data.migration.DetailsMigrator"
            failonerror="true"
            fork="true">
            <ant:classpath>
                <ant:pathelement path="${maven.build.dest}"/>
                <ant:pathelement path="${maven.build.dir}/hibernate"/>
                <ant:path refid="maven.dependency.classpath"/>
            </ant:classpath>
            <arg line="-c application-context.xml"/>
        </ant:java>
    </goal>

</project>