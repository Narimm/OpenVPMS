<?xml version="1.0"?>

<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2016 (C) OpenVPMS Ltd. All Rights Reserved.
  -->

<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>


    <query name="appointmentEvents">
        <![CDATA[
select act.archetypeId, act.id, act.linkId, act.version,
      p.activityStartTime,
      p.activityEndTime,
      indices(details), elements(details),
      act.status,
      act.reason,
      act.name,
      act.description,
      p.archetypeId.shortName,
      p.version,
      e.archetypeId, e.id, e.linkId,
      e.name
from  org.openvpms.component.business.dao.hibernate.im.act.ActDOImpl as act
join act.participations as p
      with (p.actShortName = 'act.customerAppointment' or p.actShortName = 'act.calendarBlock')
           and ((p.activityStartTime < :from and p.activityEndTime > :from)
	            or (p.activityStartTime < :to and p.activityEndTime > :to)
      	        or (p.activityStartTime >= :from and p.activityEndTime <=:to))
join p.entity as e
join act.participations as schedule
      with schedule.archetypeId.shortName = 'participation.schedule'
          and (schedule.actShortName = 'act.customerAppointment' or schedule.actShortName = 'act.calendarBlock')
          and schedule.entity.id = :scheduleId
          and ((schedule.activityStartTime < :from and schedule.activityEndTime > :from)
            	or (schedule.activityStartTime < :to and schedule.activityEndTime > :to)
            	or (schedule.activityStartTime >= :from and schedule.activityEndTime <=:to))
      left outer join act.details as details
where (act.archetypeId.shortName = 'act.customerAppointment' or act.archetypeId.shortName = 'act.calendarBlock')
order by p.activityStartTime, act.id
      ]]>
    </query>

    <query name="taskEvents">
        <![CDATA[
select act.archetypeId, act.id, act.linkId, act.version,
      p.activityStartTime,
      p.activityEndTime,
      indices(details), elements(details),
      act.status,
      act.reason,
      act.name,
      act.description,
      p.archetypeId.shortName,
      p.version,
      e.archetypeId, e.id, e.linkId,
      e.name
from  org.openvpms.component.business.dao.hibernate.im.act.ActDOImpl as act
join act.participations as p
     with p.actShortName = 'act.customerTask'
        and (p.activityStartTime <= :to
            and (p.activityEndTime >= :from or p.activityEndTime is null))
join p.entity as e
join act.participations as schedule
      with schedule.archetypeId.shortName = 'participation.worklist'
          and schedule.actShortName = 'act.customerTask'
          and schedule.entity.id = :scheduleId
          and (schedule.activityStartTime <= :to
              and (schedule.activityEndTime >= :from or schedule.activityEndTime is null))
left outer join act.details as details
where act.archetypeId.shortName = 'act.customerTask'
order by p.activityStartTime, act.id
      ]]>
    </query>

    <query name="findFreeSlots">
        <![CDATA[
select ap.entity.id as scheduleId, a.activityEndTime as startTime, min(b.activityStartTime) as endTime
from  org.openvpms.component.business.dao.hibernate.im.act.ActDOImpl as a,
      org.openvpms.component.business.dao.hibernate.im.act.ActDOImpl as b
join a.participations ap
      with ap.archetypeId.shortName = 'participation.schedule'
           and ap.entity.id = :scheduleId
           and ap.actShortName = 'act.customerAppointment'
           and (ap.activityStartTime between :from and :to or ap.activityEndTime between :from and :to)
join b.participations bp
      with bp.archetypeId.shortName = 'participation.schedule'
           and bp.entity.id = :scheduleId
           and bp.actShortName = 'act.customerAppointment'
           and (bp.activityStartTime between :from and :to or bp.activityEndTime between :from and :to)
where a.archetypeId.shortName = 'act.customerAppointment'
      and b.archetypeId.shortName = 'act.customerAppointment'
      and (a.activityStartTime between :from and :to or a.activityEndTime between :from and :to)
      and (b.activityStartTime between :from and :to or b.activityEndTime between :from and :to)
      and b.activityEndTime > a.activityEndTime
group by a.activityEndTime, ap.entity.id
having a.activityEndTime < min(b.activityStartTime)
order by a.activityEndTime, ap.entity.id
        ]]>
    </query>

</hibernate-mapping>