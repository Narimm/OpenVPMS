<?xml version="1.0"?>
<!--
  #  Version: 1.0
  #
  #  The contents of this file are subject to the OpenVPMS License Version
  #  1.0 (the 'License'); you may not use this file except in compliance with
  #  the License. You may obtain a copy of the License at
  #  http://www.openvpms.org/license/
  #
  #  Software distributed under the License is distributed on an 'AS IS' basis,
  #  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  #  for the specific language governing rights and limitations under the
  #  License.
  #
  #  Copyright 2006 (C) OpenVPMS Ltd. All Rights Reserved.
  #
  #  $Id$
-->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>


    <query name="product.speciesQuery1">
        <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where p2.archetypeId.shortName=:shortName1
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where p3.archetypeId.shortName=:shortName1
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where p4.archetypeId.shortName=:shortName1
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
        ]]>
    </query>

    <query name="product.nameAndSpeciesQuery1">
         <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1)
             and p2.name like :name
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where p3.archetypeId.shortName=:shortName1
             and p3.name like :name
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1)
                   and p4.name like :name
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
       ]]>
   </query>

   <query name="product.speciesQuery2">
        <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2)
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2)
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2)
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
        ]]>
    </query>

    <query name="product.nameAndSpeciesQuery2">
         <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2)
             and p2.name like :name
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2)
             and p3.name like :name
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2)
                   and p4.name like :name
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
       ]]>
   </query>

   <query name="product.speciesQuery3">
        <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2 or p2.archetypeId.shortName=:shortName3)
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2 or p3.archetypeId.shortName=:shortName3)
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2 or p4.archetypeId.shortName=:shortName3)
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
        ]]>
    </query>

    <query name="product.nameAndSpeciesQuery3">
         <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2 or p2.archetypeId.shortName=:shortName3)
             and p2.name like :name
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2 or p3.archetypeId.shortName=:shortName3)
             and p3.name like :name
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2 or p4.archetypeId.shortName=:shortName3)
                   and p4.name like :name
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
       ]]>
    </query>

    <query name="product.speciesQuery4">
         <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2 or p2.archetypeId.shortName=:shortName3 or p2.archetypeId.shortName=:shortName4)
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2 or p3.archetypeId.shortName=:shortName3 or p3.archetypeId.shortName=:shortName4)
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2 or p4.archetypeId.shortName=:shortName3 or p4.archetypeId.shortName=:shortName4)
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
       ]]>
     </query>

    <query name="product.nameAndSpeciesQuery4">
         <![CDATA[
select p
from org.openvpms.component.business.domain.im.product.Product as p
where p.uid in (
       select p2.uid
       from org.openvpms.component.business.domain.im.product.Product as p2
       inner join p2.classifications c
       where (p2.archetypeId.shortName=:shortName1 or p2.archetypeId.shortName=:shortName2 or p2.archetypeId.shortName=:shortName3 or p2.archetypeId.shortName=:shortName4)
             and p2.name like :name
             and c.active=true
             and c.archetypeId.shortName='lookup.species'
             and c.code=:species)
       or p.uid in (
       select p3.uid
       from org.openvpms.component.business.domain.im.product.Product p3
       left join p3.classifications c
       where (p3.archetypeId.shortName=:shortName1 or p3.archetypeId.shortName=:shortName2 or p3.archetypeId.shortName=:shortName3 or p3.archetypeId.shortName=:shortName4)
             and p3.name like :name
             and ((c.active=1 and c.archetypeId.shortName!='lookup.species') or c.active is null)
             and p3.uid not in (
             select p4.uid
             from org.openvpms.component.business.domain.im.product.Product as p4
             inner join p4.classifications c
             where (p4.archetypeId.shortName=:shortName1 or p4.archetypeId.shortName=:shortName2 or p4.archetypeId.shortName=:shortName3 or p4.archetypeId.shortName=:shortName4)
                   and p4.name like :name
                   and c.active=true
                   and c.archetypeId.shortName='lookup.species'
                   and c.code!=:species)
                   )
order by p.name
       ]]>
     </query>

</hibernate-mapping>