<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2014 (C) OpenVPMS Ltd. All Rights Reserved.
  -->
<rule-set name="archetypeService.save.party.organisationPractice.before"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java"
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
          xs:schemaLocation="http://drools.org/rules rules.xsd
    				   http://drools.org/semantics/java java.xsd">

    <rule name="Check single active practice">
        <parameter identifier="party">
            <java:class>org.openvpms.component.business.domain.im.party.Party</java:class>
        </parameter>
        <parameter identifier="service">
            <java:class>org.openvpms.component.business.service.archetype.IArchetypeService</java:class>
        </parameter>
        <parameter identifier="currencies">
            <java:class>org.openvpms.archetype.rules.math.Currencies</java:class>
        </parameter>
        <java:consequence>
            import org.openvpms.archetype.rules.practice.PracticeException;
            import org.openvpms.archetype.rules.practice.PracticeRules;

            PracticeRules rules = new PracticeRules(service, currencies);
            if (party.isActive() &amp;&amp; !rules.isActivePractice(party)) {
            throw new PracticeException(PracticeException.ErrorCode.SingleActivePractice);
            }
        </java:consequence>
    </rule>
</rule-set>