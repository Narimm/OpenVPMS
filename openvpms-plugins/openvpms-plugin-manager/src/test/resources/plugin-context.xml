<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2013 (C) OpenVPMS Ltd. All Rights Reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:plugin="http://openvpms.org/schema/plugin/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://openvpms.org/schema/plugin/spring http://openvpms.org/schema/plugin/spring/plugin.xsd">

    <bean name="testService" class="org.openvpms.plugin.test.service.impl.TestServiceImpl">
        <plugin:service/>
    </bean>

    <bean name="pluginServiceProvider" class="org.openvpms.plugin.manager.spring.PluginServiceProviderFactoryBean"/>


    <!--  Property configuration -->
    <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">

        <property name="ignoreResourceNotFound" value="true"/>

        <property name="locations">
            <list>
                <value>classpath:hibernate.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="properties"/>

        <!-- allow system properties to override any other property source -->
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName"
                  value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <!--  Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.provider_class">
                    ${hibernate.cache.provider_class}
                </prop>
                <prop key="hibernate.cache.use_second_level_cache">
                    ${hibernate.cache.use_second_level_cache}
                </prop>
                <prop key="hibernate.jdbc.batch_size">
                    ${hibernate.jdbc.batch_size}
                </prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ActDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ActRelationshipDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/act/ParticipationDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/ActionTypeDescriptorDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/ArchetypeDescriptorDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/AssertionDescriptorDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/AssertionTypeDescriptorDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/archetype/NodeDescriptorDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/document/DocumentDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/audit/AuditRecord.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityIdentityDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/entity/EntityRelationshipDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/lookup/LookupDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/lookup/LookupRelationshipDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/party/ContactDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/product/ProductPriceDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/security/ArchetypeAuthorityDOImpl.hbm.xml
                </value>
                <value>
                    org/openvpms/component/business/dao/hibernate/im/security/SecurityRoleDOImpl.hbm.xml
                </value>
                <value>
                    /org/openvpms/archetype/rules/workflow/Workflow.hbm.xml
                </value>
                <value>
                    /org/openvpms/archetype/rules/patient/reminder/Reminder.hbm.xml
                </value>
                <value>
                    /org/openvpms/archetype/rules/finance/account/Balance.hbm.xml
                </value>
                <value>
                    /org/openvpms/archetype/rules/supplier/Supplier.hbm.xml
                </value>
            </list>
        </property>
    </bean>

    <bean id="txnManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  The IMObject DAO bean -->
    <bean id="imObjectDao"
          class="org.openvpms.component.business.dao.hibernate.im.IMObjectDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="transactionManager" ref="txnManager"/>
    </bean>

    <bean id="archetypeDescriptorCache"
          class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheDB">
        <constructor-arg ref="imObjectDao"/>
    </bean>

    <bean id="archetypeService"
          class="org.openvpms.component.business.service.archetype.ArchetypeService">
        <constructor-arg ref="archetypeDescriptorCache"/>
        <property name="dao" ref="imObjectDao"/>
        <plugin:service/>
    </bean>

    <bean id="archetypeServiceHelper"
          class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
        <constructor-arg ref="archetypeService"/>
    </bean>

    <bean id="lookupService" class="org.openvpms.component.business.service.lookup.LookupService">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref local="imObjectDao"/>
        </constructor-arg>
    </bean>

    <bean id="lookupServiceHelper" class="org.openvpms.component.business.service.lookup.LookupServiceHelper">
        <constructor-arg>
            <ref local="lookupService"/>
        </constructor-arg>
    </bean>

    <!-- The JXPathHelper class, used to register extension functions -->
    <bean id="jxpathHelper"
          class="org.openvpms.component.system.common.jxpath.JXPathHelper">
        <constructor-arg>
            <map>
                <entry key="openvpms"
                       value="org.openvpms.component.business.service.archetype.ArchetypeServiceFunctions"/>
                <entry key="date"
                       value="org.openvpms.component.system.common.jxpath.DateFunctions"/>
                <entry key="lookup"
                       value="org.openvpms.archetype.function.lookup.LookupFunctions"/>
                <entry key="party">
                    <bean class="org.openvpms.archetype.function.party.PartyFunctions"/>
                </entry>
                <entry key="math">
                    <bean class="org.openvpms.archetype.function.math.MathFunctions"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

</beans>